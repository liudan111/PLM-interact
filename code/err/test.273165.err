2024-11-06 23:21:21.228620: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
2024-11-06 23:21:21.228725: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
2024-11-06 23:21:21.228618: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
2024-11-06 23:21:21.228720: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
2024-11-06 23:21:21.228617: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
2024-11-06 23:21:21.228724: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
2024-11-06 23:21:21.228624: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
2024-11-06 23:21:21.228725: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
2024-11-06 23:21:21.229772: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
2024-11-06 23:21:21.229769: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
2024-11-06 23:21:21.229769: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
2024-11-06 23:21:21.229771: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
2024-11-06 23:21:22.540630: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
2024-11-06 23:21:22.540651: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
2024-11-06 23:21:22.540708: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
2024-11-06 23:21:22.540720: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
/mnt/data/project0019/danliu/conda/envs/sentence_pair/lib/python3.10/site-packages/torch/_utils.py:776: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  return self.fget.__get__(instance, owner)()
/mnt/data/project0019/danliu/conda/envs/sentence_pair/lib/python3.10/site-packages/torch/_utils.py:776: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  return self.fget.__get__(instance, owner)()
/mnt/data/project0019/danliu/conda/envs/sentence_pair/lib/python3.10/site-packages/torch/_utils.py:776: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  return self.fget.__get__(instance, owner)()
/mnt/data/project0019/danliu/conda/envs/sentence_pair/lib/python3.10/site-packages/torch/_utils.py:776: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  return self.fget.__get__(instance, owner)()
Some weights of EsmForMaskedLM were not initialized from the model checkpoint at /mnt/data/project0019/danliu/PPI/offline/esm2_t12_35M_UR50D and are newly initialized: ['lm_head.bias', 'lm_head.dense.bias', 'lm_head.dense.weight', 'lm_head.layer_norm.bias', 'lm_head.layer_norm.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Some weights of EsmForMaskedLM were not initialized from the model checkpoint at /mnt/data/project0019/danliu/PPI/offline/esm2_t12_35M_UR50D and are newly initialized: ['lm_head.bias', 'lm_head.dense.bias', 'lm_head.dense.weight', 'lm_head.layer_norm.bias', 'lm_head.layer_norm.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Some weights of EsmForMaskedLM were not initialized from the model checkpoint at /mnt/data/project0019/danliu/PPI/offline/esm2_t12_35M_UR50D and are newly initialized: ['lm_head.bias', 'lm_head.dense.bias', 'lm_head.dense.weight', 'lm_head.layer_norm.bias', 'lm_head.layer_norm.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Some weights of EsmForMaskedLM were not initialized from the model checkpoint at /mnt/data/project0019/danliu/PPI/offline/esm2_t12_35M_UR50D and are newly initialized: ['lm_head.bias', 'lm_head.dense.bias', 'lm_head.dense.weight', 'lm_head.layer_norm.bias', 'lm_head.layer_norm.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Be aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.
Be aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.
Be aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.
Be aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.
Be aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.
Traceback (most recent call last):
  File "/users/2656169l/PLM-interact/code/inference_ddp.py", line 333, in <module>
    main(args,argsDict)
  File "/users/2656169l/PLM-interact/code/inference_ddp.py", line 303, in main
    trainer.inference(args,
  File "/users/2656169l/PLM-interact/code/inference_ddp.py", line 177, in inference
Be aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.
Be aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.
Be aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.
    self.eval(args,dev_samples=dev_samples,epoch=epoch,batch_size_val = batch_size_val, output_path= output_path,loss_fct=loss_fct)
  File "/users/2656169l/PLM-interact/code/inference_ddp.py", line 200, in eval
Be aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.
    for _, (features,labels,ids) in enumerate (dev_dataloader):
ValueError: not enough values to unpack (expected 3, got 2)
Be aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.
Be aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.
Be aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.
Be aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.
Be aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.
Be aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.
Be aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.
Be aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.
Be aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.
Traceback (most recent call last):
  File "/users/2656169l/PLM-interact/code/inference_ddp.py", line 333, in <module>
    main(args,argsDict)
  File "/users/2656169l/PLM-interact/code/inference_ddp.py", line 303, in main
    trainer.inference(args,
  File "/users/2656169l/PLM-interact/code/inference_ddp.py", line 177, in inference
    self.eval(args,dev_samples=dev_samples,epoch=epoch,batch_size_val = batch_size_val, output_path= output_path,loss_fct=loss_fct)
  File "/users/2656169l/PLM-interact/code/inference_ddp.py", line 200, in eval
    for _, (features,labels,ids) in enumerate (dev_dataloader):
ValueError: not enough values to unpack (expected 3, got 2)
Traceback (most recent call last):
  File "/users/2656169l/PLM-interact/code/inference_ddp.py", line 333, in <module>
    main(args,argsDict)
  File "/users/2656169l/PLM-interact/code/inference_ddp.py", line 303, in main
Traceback (most recent call last):
  File "/users/2656169l/PLM-interact/code/inference_ddp.py", line 333, in <module>
    trainer.inference(args,
  File "/users/2656169l/PLM-interact/code/inference_ddp.py", line 177, in inference
    main(args,argsDict)
  File "/users/2656169l/PLM-interact/code/inference_ddp.py", line 303, in main
    self.eval(args,dev_samples=dev_samples,epoch=epoch,batch_size_val = batch_size_val, output_path= output_path,loss_fct=loss_fct)
  File "/users/2656169l/PLM-interact/code/inference_ddp.py", line 200, in eval
    trainer.inference(args,
  File "/users/2656169l/PLM-interact/code/inference_ddp.py", line 177, in inference
    for _, (features,labels,ids) in enumerate (dev_dataloader):
ValueError: not enough values to unpack (expected 3, got 2)
    self.eval(args,dev_samples=dev_samples,epoch=epoch,batch_size_val = batch_size_val, output_path= output_path,loss_fct=loss_fct)
  File "/users/2656169l/PLM-interact/code/inference_ddp.py", line 200, in eval
    for _, (features,labels,ids) in enumerate (dev_dataloader):
ValueError: not enough values to unpack (expected 3, got 2)
srun: error: gpu103: tasks 0-1: Exited with exit code 1
srun: error: gpu103: task 3: Exited with exit code 1
srun: error: gpu103: task 2: Exited with exit code 1
